

<style>
    .slider {
        -webkit-appearance: none;
        width: 100%;
        height: 4px;
        margin-top:@($"{(height/2 - 2).ToString("#.##")}px");
        /*margin-top:13px;*/
        border-radius: 15px;
        background: white;
        outline: none;
        opacity: 0.7;
        -webkit-transition: .2s;
        transition: opacity .2s;
    }

        .slider:hover {
            opacity: 1;
        }

        .slider::-webkit-slider-thumb {
            -webkit-appearance: none;
            appearance: none;
            width: 15px;
            height: 15px;
            border-radius: 50%;
            background-color: #fff;
            border: 1px solid #94c11f;
            cursor: pointer;
        }
        .slider::-moz-range-thumb {
            width: 15px;
            height: 15px;
            border-radius: 50%;
            border-radius: 50%;
            background-color: #fff;
            border: 1px solid #94c11f;
            cursor: pointer;
        }

    .div-style {
        font-weight: 600;
        color: #515166;
        font-size: 15px;
        margin-bottom: 5px;
    }

</style>

<div class="div-style" style="text-align:center">Set your mood: increase or decrease your positivity level</div>

<div style="width: 100%; height: @(height.ToString("#.##"))px; background: linear-gradient(90deg, #E4E5EC 11%, #94C11F 100%);
        border-radius: 50px">
    <input @bind="positivityValue" @bind:event="oninput" type="range" min="-100" max="100" class="slider">
</div>

@code {

    [Parameter] public int PositivityValue { get; set; } = 0;
    [Parameter] public EventCallback<int> PositivityValueChanged { get; set; }


    private int positivityValue
    {
        get => PositivityValue;
        set => PositivityValueChanged.InvokeAsync(value);
    }
    private double height = 30;
}
